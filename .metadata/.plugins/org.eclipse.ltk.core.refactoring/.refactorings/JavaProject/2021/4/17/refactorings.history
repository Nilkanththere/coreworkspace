<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.IndiaList.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{IndiaList.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618724724987" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.IndiaList.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{IndiaList.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618724741753" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.WorldList2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{WorldList2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618736517475" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.WorldList2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{WorldList2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618736525307" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.WorldList2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{WorldList2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618736535053" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.WorldList2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{WorldList2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618736540777" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     genricEXP.Details.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;genricEXP{Details.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618764675581" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     setdatastructure.Task7a.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;setdatastructure{Task7a.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1618913217244" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Test1.java&apos; to &apos;JavaProject/src/comparable&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Destination element: &apos;JavaProject/src/comparable&apos;&#x0D;&#x0A;- Original element: &apos;coparator.Test1.java&apos;" description="Copy compilation unit" destination="/src&lt;comparable" element1="/src&lt;coparator{Test1.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1618989782177" units="1" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Employee.java&apos; to &apos;JavaProject/src/comparable&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Destination element: &apos;JavaProject/src/comparable&apos;&#x0D;&#x0A;- Original element: &apos;coparator.Employee.java&apos;" description="Copy compilation unit" destination="/src&lt;comparable" element1="/src&lt;coparator{Employee.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1618989808462" units="1" version="1.0"/>&#x0A;&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.College1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{College1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619073905770" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.College1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{College1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619075020764" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.College1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{College1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619075038662" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.College1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{College1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619075220870" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.College1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{College1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619075299825" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.College1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{College1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619075316350" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.Worldmap2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{Worldmap2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619110759474" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.Worldmap2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{Worldmap2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619110790282" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.Worldmap2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{Worldmap2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619110914852" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original element: &apos;map.WorldmapSet.java&apos;" description="Delete element" element1="/src&lt;map{WorldmapSet.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1619111779412" subPackages="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaProject&apos;&#x0D;&#x0A;- Original project: &apos;JavaProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     map.Company1.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;map{Company1.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1619115470439" version="1.0"/>
</session>